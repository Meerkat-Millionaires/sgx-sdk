FROM gramineproject/gramine:v1.4 as builder

ENV PATH=$PATH:/root/.cargo/bin/
ENV DEBIAN_FRONTEND="noninteractive"
ENV DISTRO="ubuntu20.04-server"
ENV SGX_DRIVER_VERSION="2.11.54c9c4c"
ENV SGX_SDK_VERSION="2.19.100.3"
ENV SGX_SDK_VERSION_SHORT="2.19"
ENV UNAME="5.15.0-1035-azure"

RUN mkdir -p /data/protected_files

# Add startup files, user can overwrite these
COPY --chown=root:root ./configs/boot.sh /boot.sh
COPY --chown=root:root ./configs/app.manifest.template /app.manifest.template
COPY --chown=root:root ./configs/get_measurement.sh /get_measurement.sh
RUN chmod a+x /boot.sh && chmod a+x /get_measurement.sh

# Add Azure DCAP registry
RUN curl -fsSLo /usr/share/keyrings/microsoft.asc https://packages.microsoft.com/keys/microsoft.asc && \
    echo "deb [arch=amd64 signed-by=/usr/share/keyrings/microsoft.asc] https://packages.microsoft.com/ubuntu/20.04/prod focal main" | \
    tee /etc/apt/sources.list.d/msprod.list

# install Azure DCAP library
RUN --mount=target=/var/lib/apt/lists,type=cache,sharing=locked \
    --mount=target=/var/cache/apt,type=cache,sharing=locked \
    rm -f /etc/apt/apt.conf.d/docker-clean && \
    apt-get update && \
    apt-get -y --no-install-recommends install \
    az-dcap-client \
    xxd \
    build-essential \
    gcc \
    clang \
    wget

# Install Rust
RUN curl https://sh.rustup.rs -sSf | sh -s -- -y
RUN cargo install cargo-strip

# Restart the AESM service
RUN /restart_aesm.sh

# Configure SGX-detect
WORKDIR /sgx-detect
RUN wget https://download.fortanix.com/sgx-detect/ubuntu20.04/sgx-detect && \
    chmod a+x sgx-detect

CMD ["bash", "/boot.sh"]
